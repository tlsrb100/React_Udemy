{"ast":null,"code":"var _jsxFileName = \"/Users/ohseonghwan/code/React_Udemy/react-complete-guide-code-22-authentication/src/components/Auth/AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext } from 'react';\nimport AuthContext from '../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const API_URL = process.env.REACT_APP_FIREBASE_API_KEY;\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef('');\n  const passwordInputRef = useRef('');\n  const authCtx = useContext(AuthContext);\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    let url;\n    setIsLoading(true); //로딩중으로 변경\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_URL}`;\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_URL}`;\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'content-type': 'apllication/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n      if (res.ok) {\n        //응답이 ok이면 ~~한다\n        return res.json();\n      } else {\n        //아래와 같은 동작을 하는 promise를 리턴한다.\n        return res.json().then(data => {\n          let errorMessage = 'Authentication!';\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken);\n      console.log(data);\n    }).catch(err => {\n      alert(err.errorMessage);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailInputRef,\n          type: \"email\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordInputRef,\n          type: \"password\",\n          id: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"HO8Ifn1QONLpXwmHr7dPNxu7qqg=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","AuthContext","classes","AuthForm","API_URL","process","env","REACT_APP_FIREBASE_API_KEY","isLogin","setIsLogin","isLoading","setIsLoading","emailInputRef","passwordInputRef","authCtx","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","login","idToken","console","log","catch","err","alert","auth","control","actions","toggle"],"sources":["/Users/ohseonghwan/code/React_Udemy/react-complete-guide-code-22-authentication/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport AuthContext from '../store/auth-context';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const API_URL = process.env.REACT_APP_FIREBASE_API_KEY;\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef('');\n  const passwordInputRef = useRef('');\n\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    let url;\n    setIsLoading(true); //로딩중으로 변경\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_URL}`;\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_URL}`;\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'content-type': 'apllication/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          //응답이 ok이면 ~~한다\n          return res.json();\n        } else {\n          //아래와 같은 동작을 하는 promise를 리턴한다.\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication!';\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        authCtx.login(data.idToken);\n        console.log(data);\n      })\n      .catch((err) => {\n        alert(err.errorMessage);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input ref={emailInputRef} type='email' id='email' required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            ref={passwordInputRef}\n            type='password'\n            id='password'\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}